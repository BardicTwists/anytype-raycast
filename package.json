{
  "$schema": "https://www.raycast.com/schemas/extension.json",
  "name": "anytype",
  "title": "Anytype",
  "description": "Create, browse and search in Anytype - right at your fingertips, anywhere on your Mac.",
  "icon": "anytype-icon.png",
  "author": "jmetrikat",
  "owner": "any",
  "access": "public",
  "categories": [
    "Applications",
    "Productivity"
  ],
  "license": "MIT",
  "commands": [
    {
      "name": "create-object",
      "title": "Create Object",
      "subtitle": "Anytype",
      "description": "Create a new object.",
      "mode": "view"
    },
    {
      "name": "browse-spaces",
      "title": "Browse Spaces",
      "subtitle": "Anytype",
      "description": "Browse your spaces one by one.",
      "mode": "view"
    },
    {
      "name": "search-anytype",
      "title": "Search Anytype",
      "subtitle": "Anytype",
      "description": "Search objects globally in all spaces.",
      "mode": "view"
    }
  ],
  "tools": [
    {
      "name": "add-to-list",
      "title": "Add to List",
      "description": "Add an object to a list."
    },
    {
      "name": "create-object",
      "title": "Create Object",
      "description": "Create a Anytype object of a specific type in a specific database."
    },
    {
      "name": "get-members",
      "title": "Get Members",
      "description": "Get all members of a specific space."
    },
    {
      "name": "get-object",
      "title": "Get Object",
      "description": "Get the content of an Anytype object."
    },
    {
      "name": "get-spaces",
      "title": "Get Spaces",
      "description": "Get all spaces in Anytype"
    },
    {
      "name": "get-types",
      "title": "Get Types",
      "description": "Get types in a specific Anytype space."
    },
    {
      "name": "search-anytype",
      "title": "Search Anytype",
      "description": "Search for objects in Anytype"
    },
    {
      "name": "search-space",
      "title": "Search Space",
      "description": "Search for objects in a specific space"
    },
    {
      "name": "solve-challenge",
      "title": "Solve Challenge",
      "description": "Complete the pairing process with the Anytype desktop app."
    },
    {
      "name": "start-challenge",
      "title": "Start Challenge",
      "description": "Start the pairing process with the Anytype desktop app."
    }
  ],
  "ai": {
    "evals": [
      {
        "input": "@anytype add all objects of type 'task' to my to-do list in my personal space",
        "mocks": {
          "get-spaces": [
            {
              "id": "space123",
              "name": "My Personal Space",
              "icon": "üåå"
            }
          ],
          "get-types": [
            {
              "id": "type123",
              "name": "Task",
              "icon": "üìù"
            }
          ],
          "search-space": [
            {
              "id": "task123",
              "spaceId": "space123",
              "name": "First Task",
              "snippet": "This is the snippet of the task."
            },
            {
              "id": "task456",
              "spaceId": "space123",
              "name": "Another Task",
              "snippet": "This is the snippet of another task."
            },
            {
              "id": "list123",
              "spaceId": "space123",
              "name": "To-Do List",
              "snippet": "This is the snippet of the list."
            }
          ],
          "add-to-list": []
        },
        "expected": [
          {
            "callsTool": "get-spaces"
          },
          {
            "callsTool": "get-types"
          },
          {
            "callsTool": "search-space"
          },
          {
            "callsTool": "add-to-list"
          },
          {
            "callsTool": "add-to-list"
          }
        ],
        "usedAsExample": true
      },
      {
        "input": "@anytype create a new page in my personal space explaining the concept of privacy",
        "mocks": {
          "get-spaces": [
            {
              "id": "space123",
              "name": "My Personal Space",
              "icon": "üåå"
            }
          ],
          "get-types": [
            {
              "id": "type123",
              "name": "Page",
              "icon": "üìÑ"
            }
          ],
          "create-object": [
            {
              "id": "object123",
              "spaceId": "space123",
              "name": "First Page",
              "icon": "üìÑ",
              "snippet": "This is the snippet of the object."
            }
          ]
        },
        "expected": [
          {
            "callsTool": "get-spaces"
          },
          {
            "callsTool": "get-types"
          },
          {
            "callsTool": "create-object"
          }
        ],
        "usedAsExample": true
      },
      {
        "input": "@anytype how many members are in my personal space?",
        "mocks": {
          "get-spaces": [
            {
              "id": "space123",
              "name": "My Personal Space",
              "icon": "üåå"
            }
          ],
          "get-members": [
            {
              "id": "member123",
              "name": "Alice",
              "global_name": "alice",
              "role": "owner"
            },
            {
              "id": "member456",
              "name": "Bob",
              "global_name": "bob",
              "role": "editor"
            }
          ]
        },
        "expected": [
          {
            "callsTool": "get-spaces"
          },
          {
            "callsTool": "get-members"
          },
          {
            "includes": "2"
          }
        ],
        "usedAsExample": true
      },
      {
        "input": "@anytype show all my spaces",
        "mocks": {
          "get-spaces": [
            {
              "id": "space123",
              "name": "My Personal Space",
              "icon": "üåå"
            }
          ]
        },
        "expected": [
          {
            "callsTool": "get-spaces"
          }
        ],
        "usedAsExample": true
      },
      {
        "input": "@anytype get all types in my personal space",
        "mocks": {
          "get-spaces": [
            {
              "id": "space123",
              "name": "My Personal Space",
              "icon": "üåå"
            }
          ],
          "get-types": [
            {
              "id": "type123",
              "name": "Page",
              "icon": "üìÑ"
            }
          ]
        },
        "expected": [
          {
            "callsTool": "get-spaces"
          },
          {
            "callsTool": "get-types"
          }
        ],
        "usedAsExample": true
      },
      {
        "input": "@anytype search for objects globally",
        "mocks": {
          "search-anytype": [
            {
              "id": "object123",
              "spaceId": "space123",
              "name": "First Object",
              "icon": "üìÑ",
              "snippet": "This is the snippet of the object."
            },
            {
              "id": "object456",
              "spaceId": "space345",
              "name": "Another Object",
              "icon": "üìú",
              "snippet": "This is the snippet of another object."
            }
          ]
        },
        "expected": [
          {
            "callsTool": "search-anytype"
          }
        ],
        "usedAsExample": true
      },
      {
        "input": "@anytype search for recently modified objects in my personal space",
        "mocks": {
          "get-spaces": [
            {
              "id": "space123",
              "name": "My Personal Space",
              "icon": "üåå"
            }
          ],
          "search-space": [
            {
              "id": "object123",
              "spaceId": "space123",
              "name": "First Object",
              "icon": "üìÑ",
              "snippet": "This is the snippet of the object."
            },
            {
              "id": "object456",
              "spaceId": "space123",
              "name": "Another Object",
              "icon": "üìú",
              "snippet": "This is the snippet of another object."
            }
          ]
        },
        "expected": [
          {
            "callsTool": "get-spaces"
          },
          {
            "callsTool": "search-space"
          }
        ],
        "usedAsExample": true
      }
    ]
  },
  "preferences": [
    {
      "name": "anytypeApp",
      "title": "Anytype App",
      "description": "The Anytype app on your Mac.",
      "type": "appPicker",
      "default": "com.anytype.anytype",
      "required": false
    },
    {
      "name": "primaryAction",
      "title": "Primary Action",
      "description": "Choose the primary action when an object is selected.",
      "type": "dropdown",
      "data": [
        {
          "title": "Show Details",
          "value": "show_details"
        },
        {
          "title": "Open Object in Anytype",
          "value": "open_object"
        }
      ],
      "default": "show_details",
      "required": false
    },
    {
      "name": "sort",
      "title": "Sort Order",
      "description": "The sort order of objects when displayed as a list.",
      "type": "dropdown",
      "data": [
        {
          "title": "Created Date",
          "value": "created_date"
        },
        {
          "title": "Last Modified Date",
          "value": "last_modified_date"
        },
        {
          "title": "Last Opened Date",
          "value": "last_opened_date"
        }
      ],
      "default": "last_modified_date",
      "required": false
    },
    {
      "name": "limit",
      "title": "API Limit",
      "description": "The maximum number of objects to fetch from the Anytype API at once. Be careful when changing this, as a large number can cause performance issues.",
      "type": "dropdown",
      "data": [
        {
          "title": "25",
          "value": "25"
        },
        {
          "title": "50",
          "value": "50"
        },
        {
          "title": "100",
          "value": "100"
        }
      ],
      "default": "50",
      "required": false
    }
  ],
  "dependencies": {
    "@raycast/api": "^1.93.1",
    "@raycast/utils": "^1.17.0",
    "date-fns": "^4.1.0",
    "node-fetch": "^3.3.2"
  },
  "devDependencies": {
    "@raycast/eslint-config": "^1.0.11",
    "@types/node": "20.8.10",
    "@types/react": "18.3.3",
    "eslint": "^8.57.0",
    "husky": "^9.1.7",
    "lint-staged": "^15.4.3",
    "prettier": "^3.3.3",
    "prettier-plugin-organize-imports": "^4.1.0",
    "react-devtools": "^5.2.0",
    "typescript": "^5.4.5"
  },
  "scripts": {
    "build": "ray build",
    "dev": "ray develop",
    "fix-lint": "ray lint --fix",
    "lint": "ray lint",
    "type-check": "tsc --noEmit",
    "prepublishOnly": "echo \"\\n\\nIt seems like you are trying to publish the Raycast extension to npm.\\n\\nIf you did intend to publish it to npm, remove the \\`prepublishOnly\\` script and rerun \\`npm publish\\` again.\\nIf you wanted to publish it to the Raycast Store instead, use \\`npm run publish\\` instead.\\n\\n\" && exit 1",
    "publish": "npx @raycast/api@latest publish",
    "prepare": "husky",
    "evals": "npx ray evals"
  },
  "lint-staged": {
    "**/*.{ts,tsx}": [
      "npm run lint",
      "npm run type-check"
    ]
  }
}
